/***************************************************************************//**
 * @file sl_sdc_init.c.jinja
 * @brief SDC Driver Instance Initialization
 *******************************************************************************
 * # License
 * <b>Copyright 2020 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

#include "sl_si91x_sdc.h"
{% for inst in sdc_instances %}
#include "sl_si91x_sdc_init_{{ inst }}_config.h"
{% endfor %}

#include "sl_sdc_instances.h"
#include "sl_si91x_sdc_common_config.h"


sl_si91x_sdc_adc_config_t sl_sdc_pin_config[SDC_NUMBER_OF_CHANNELS] = {
{% for inst in sdc_instances %}
  {
  .sdc_adc_mode    = SL_SDC_{{ inst | upper }}_INPUT_TYPE,
  .sdc_adc_p_input_pinsel    = SL_SDC_{{ inst | upper }}_POS_INPUT_CHNL_SEL,
  .sdc_adc_n_input_pinsel    = SL_SDC_{{ inst | upper }}_NEG_INPUT_CHNL_SEL,
  },  
{% endfor %}
};

sl_si91x_sdc_channel_misc_config_t sl_sdc_channel_misc_config[SDC_NUMBER_OF_CHANNELS] = {
{% for inst in sdc_instances %}
  {
   .buffer_auto_reset = SL_SDC_{{ inst | upper }}_AUTO_BUFFER_RESET_ENABLE,
  },  
{% endfor %}
};