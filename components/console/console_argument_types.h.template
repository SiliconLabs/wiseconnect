/*******************************************************************************
* @file  console_argument_types.h.template
* @brief 
*******************************************************************************
* # License
* <b>Copyright 2023 Silicon Laboratories Inc. www.silabs.com</b>
*******************************************************************************
*
* The licensor of this software is Silicon Laboratories Inc. Your use of this
* software is governed by the terms of Silicon Labs Master Software License
* Agreement (MSLA) available at
* www.silabs.com/about-us/legal/master-software-license-agreement. This
* software is distributed to you in Source Code format and is governed by the
* sections of the MSLA applicable to Source Code.
*
******************************************************************************/

{% set __headers = aggregate("/console/include_headers") %}
{% for file in __headers %}#include "{{file}}"
{% endfor -%}
#include "console_types.h"
#include <stdint.h>
#include <stddef.h>

#ifdef __cplusplus
extern "C" {
#endif
{% set __enums = aggregate("/console/enums") %}
/******************************************************
 *                     Macros
 ******************************************************/

#define CONSOLE_TYPE( name )                      CONSOLE_##name##_TYPE

/******************************************************
 *                   Enumerations
 ******************************************************/
typedef enum {
{% for name, item in __enums %}  CONSOLE_TYPE( {{name}} ),
{% endfor -%}
  CONSOLE_TYPE_COUNT // Equals the number of different types
} console_type_t;


/******************************************************
 *                 Global Variables
 ******************************************************/

{% for name, item in __enums -%}
extern const char* {{name}}_type[];
{%- endfor %}

extern const arg_list_t console_argument_types[];
extern const value_list_t console_argument_values[];

#ifdef __cplusplus
} /*extern "C" */
#endif
