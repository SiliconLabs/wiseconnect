/*******************************************************************************
 * @file  console_argument_types.c.jinja
 * @brief 
 *******************************************************************************
 * # License
 * <b>Copyright 2025 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

{% for file in console_headers %}#include "{{file}}"
{% endfor -%}
#include "console_types.h"
#include "console_argument_types.h"
#include <stdint.h>
#include <stddef.h>

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************
 *                 Global Variables
 ******************************************************/

{% for entry in console_enums -%}{% for name in entry %}
const char* {{name}}_type[] = { {%- if entry[name] is iterable -%}
    {%- for value in entry[name] %}"{{value}}", {% endfor -%}
    {%- endif %} NULL };
{%- endfor %}{% endfor %}

{% if console_enums is defined %}
const arg_list_t console_argument_types[] =
{
{% for entry in console_enums %}{% for name in entry %}    [CONSOLE_TYPE( {{name}} )] = {{name}}_type,
{% endfor %}{% endfor -%}
};

const value_list_t console_argument_values[] =
{
{% for entry in console_enums %}{% for name in entry %}    [CONSOLE_TYPE( {{name}} )] = (const uint32_t[]){ {%- for map_name in entry[name] %}{{entry[name][map_name]}}{% if not loop.is_last %}, {%endif%}{% endfor -%} },
{% endfor %}{% endfor -%}
};
{% else %}

const arg_list_t console_argument_types[] = {0};
const value_list_t console_argument_values[] = {0};

{% endif %}

#ifdef __cplusplus
} /*extern "C" */
#endif
