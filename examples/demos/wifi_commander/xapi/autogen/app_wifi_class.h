/********************************************************************************
 * @file  app_wifi_class.h 
 * @brief Initialization APIs for wifi stack
 *******************************************************************************
 * # License
 * <b>Copyright 2025 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

#ifndef APP_WIFI_STACK_INIT_H
#define APP_WIFI_STACK_INIT_H

#include "sl_status.h"

/* Forward declarations of XAPI class declaration structures */
struct app_internal_xapi_class;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_system_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_system_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_intf_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_intf_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_profile_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_profile_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_ap_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_ap_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_cred_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_net_cred_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_common_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_common_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_scan_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_scan_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_ping_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_ping_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_client_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_client_full;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_mqtt_client_optimized;
extern const struct app_internal_xapi_class app_internal_xapi_class_wifi_mqtt_client_full;

/* Macro to get a pointer to a XAPI class declaration */
#ifdef APP_WIFI_API_FULL
#define APP_WIFI_XAPI_CLASS(class_name) &app_internal_xapi_class_wifi_##class_name##_full
#else
#define APP_WIFI_XAPI_CLASS(class_name) &app_internal_xapi_class_wifi_##class_name##_optimized
#endif

/**
 * Initialize the XAPI classes for wifi stack.
 *
 * This function is automatically called by code generated by the Universal
 * Configurator if the feature is included in the project. The application is
 * not expected to call this function directly.
 *
 * @param[in] classes NULL-terminated array of pointers to class declarations.
 *   The array must remain valid until the next system reboot.
 *
 * @return SL_STATUS_OK if the initialization was successful; Other error code
 *   indicates a failure.
 */
sl_status_t app_wifi_init_classes(const struct app_internal_xapi_class *const *classes);

#endif